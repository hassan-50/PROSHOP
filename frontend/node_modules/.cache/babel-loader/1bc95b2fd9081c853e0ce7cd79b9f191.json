{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProShop\\\\frontend\\\\src\\\\screens\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from '../actions/userAction';\nimport FormContainer from '../components/FormContainer';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin;\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [userInfo, history, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password does not match');\n    } else {\n      dispatch(register(email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"m-2\",\n          type: \"name\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"m-2\",\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          className: \"m-2\",\n          placeholder: \"Enter password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          className: \"m-2\",\n          placeholder: \"Enter confirm password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"m-2\",\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"Have an account ? \", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: redirect ? `/login?redirect=${redirect}` : '/login',\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(RegisterScreen, \"X9AVagTgQBTUQkB+Hgg8KrIZEPk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["D:/ProShop/frontend/src/screens/RegisterScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","register","FormContainer","Message","Loader","Form","Button","Col","Row","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userLogin","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {register} from '../actions/userAction'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {Form , Button , Col , Row} from 'react-bootstrap'\r\nconst RegisterScreen = ({location,history}) => {\r\n        const [name , setName] = useState('')\r\n        const [email , setEmail] = useState('')\r\n        const [password , setPassword] = useState('')\r\n        const [confirmPassword , setConfirmPassword] = useState('')\r\n        const [message , setMessage] = useState(null)\r\n        const dispatch = useDispatch()\r\n        const userLogin = useSelector(state => state.userLogin)\r\n        const { loading , error , userInfo} = userLogin\r\n        const redirect = location.search ? location.search.split('=')[1]:'/'\r\n    useEffect (() => {\r\n            if(userInfo){\r\n               history.push(redirect)\r\n        }\r\n    },[userInfo , history , redirect])\r\n    const submitHandler = (e) => {\r\n            e.preventDefault()\r\n            if(password !== confirmPassword)\r\n            {\r\n                setMessage('Password does not match')\r\n            }else{\r\n                    dispatch(register(email,password))\r\n            }\r\n    }\r\n    return <FormContainer>\r\n            <h1>Sign up</h1>\r\n            {message && <Message variant='danger'>{message}</Message> } \r\n            {error && <Message variant='danger'>{error}</Message> } \r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId = 'name'>\r\n                <Form.Control className='m-2'\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}>                    \r\n                </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId = 'email'>\r\n                <Form.Control className='m-2'\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}>                    \r\n                </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                <Form.Control \r\n                type='password'\r\n                className='m-2'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}>                    \r\n                </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                <Form.Control \r\n                type='password'\r\n                className='m-2'\r\n                placeholder='Enter confirm password'\r\n                value={confirmPassword}\r\n                onChange={e => setConfirmPassword(e.target.value)}>                    \r\n                </Form.Control>\r\n                </Form.Group>\r\n                <Button className='m-2' type='submit' variant='primary'>Sign Up</Button>\r\n                </Form>\r\n                <Row className = 'py-3'>\r\n                        <Col>\r\n                        Have an account ? {' '}\r\n                        <Link to={redirect ? `/login?redirect=${redirect}`: '/login'}>Login</Link>\r\n                        </Col>\r\n                </Row>\r\n        </FormContainer>\r\n}\r\nexport default RegisterScreen"]},"metadata":{},"sourceType":"module"}