{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProShop\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const qty = location.search ? location.search.split('=')[1] : 1;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(ProductId, qty));\n    }\n  }, [dispatch, ProductId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartScreen, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["D:/ProShop/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","split","dispatch","ProductId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,WAAR,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAAQC,GAAR,EAAcC,GAAd,EAAoBC,SAApB,EAAgCC,KAAhC,EAAwCC,IAAxC,EAA+CC,MAA/C,EAAwDC,IAAxD,QAAmE,iBAAnE;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,SAAR,QAAwB,uBAAxB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,KAAD;AAASC,EAAAA,QAAT;AAAoBC,EAAAA;AAApB,CAAD,KAAkC;AAAA;;AACjD,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B;AACA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBN,QAAQ,CAACM,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlB,GAAkD,CAA9D;AACA,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGiB,SAAH,EAAa;AACTM,MAAAA,QAAQ,CAACX,SAAS,CAACY,SAAD,EAAYJ,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIP,CAACG,QAAD,EAAYC,SAAZ,EAAwBJ,GAAxB,CAJO,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfD;;GAAMP,U;UAGeX,W;;;KAHfW,U;AAgBN,eAAeA,UAAf","sourcesContent":["import React,{useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch , useSelector} from 'react-redux'\r\nimport {Row , Col , ListGroup , Image , Form , Button , Card} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport {addToCart} from '../actions/cartAction'\r\n\r\nconst CartScreen = ({match , location , history}) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? location.search.split('=')[1] : 1\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(ProductId ,qty))\r\n        }\r\n    },[dispatch , ProductId , qty])\r\n    return (\r\n        <div>\r\n            Cart\r\n        </div>\r\n    )\r\n}\r\nexport default CartScreen"]},"metadata":{},"sourceType":"module"}