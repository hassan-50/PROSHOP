{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProShop\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserDetails } from '../actions/userAction';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'; // import bcrypt from 'bcryptjs'\n\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [userInfo, history, dispatch, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password does not match');\n    } else {//DISPATCH UPDATE PROFILE\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"m-2\",\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"m-2\",\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            className: \"m-2\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            className: \"m-2\",\n            placeholder: \"Enter confirm password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-2\",\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProfileScreen, \"DZiSV5WLQGN9PonljmM32c0JxdU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/ProShop/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getUserDetails","Message","Loader","Form","Button","Col","Row","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getUserDetails} from '../actions/userAction'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n// import bcrypt from 'bcryptjs'\r\nimport {Form , Button , Col , Row} from 'react-bootstrap'\r\nconst ProfileScreen = ({location,history}) => {\r\n        const [name , setName] = useState('')\r\n        const [email , setEmail] = useState('')\r\n        const [password , setPassword] = useState('')\r\n        const [confirmPassword , setConfirmPassword] = useState('')\r\n        const [message , setMessage] = useState(null)\r\n        const dispatch = useDispatch()\r\n        const userDetails = useSelector(state => state.userDetails)\r\n        const { loading , error , user} = userDetails\r\n        const userLogin = useSelector(state => state.userLogin)\r\n        const {userInfo} = userLogin\r\n    useEffect (() => {\r\n            if(!userInfo){\r\n               history.push('/login')}\r\n               else  {\r\n                if (!user.name){\r\n                    dispatch(getUserDetails('profile'))\r\n                }\r\n                else{\r\n                    setName(user.name)\r\n                    setEmail(user.email)\r\n                }\r\n            }\r\n    },[userInfo , history , dispatch , user])\r\n    const submitHandler = (e) => {\r\n            e.preventDefault()\r\n            if(password !== confirmPassword)\r\n            {\r\n                setMessage('Password does not match')\r\n            }else{\r\n                    //DISPATCH UPDATE PROFILE\r\n            }\r\n    }\r\n    return <Row>\r\n        <Col md={3}>\r\n        <h1>User Profile</h1>\r\n            {message && <Message variant='danger'>{message}</Message> } \r\n            {error && <Message variant='danger'>{error}</Message> } \r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId = 'name'>\r\n                <Form.Control className='m-2'\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={e => setName(e.target.value)}>                    \r\n                </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId = 'email'>\r\n                <Form.Control className='m-2'\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}>                    \r\n                </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                <Form.Control \r\n                type='password'\r\n                className='m-2'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}>                    \r\n                </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                <Form.Control \r\n                type='password'\r\n                className='m-2'\r\n                placeholder='Enter confirm password'\r\n                value={confirmPassword}\r\n                onChange={e => setConfirmPassword(e.target.value)}>                    \r\n                </Form.Control>\r\n                </Form.Group>\r\n                <Button className='m-2' type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My Orders</h2>\r\n        </Col>\r\n    </Row>\r\n}\r\nexport default ProfileScreen"]},"metadata":{},"sourceType":"module"}