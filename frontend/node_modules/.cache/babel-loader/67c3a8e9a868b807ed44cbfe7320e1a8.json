{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers.js';\nimport { cartReducer } from './reducers/cartReducer.js';\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducers.js';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfroFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfroFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/ProShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfroFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,eAAvB,EAAyCC,eAAzC,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,EAA6BC,qBAA7B,QAAyD,+BAAzD;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAAQC,kBAAR,EAA4BC,gBAA5B,EAA8CC,mBAA9C,EAAmEC,wBAAnE,QAAmG,4BAAnG;AAEA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC5BY,EAAAA,WAAW,EAAGR,kBADc;AAE5BS,EAAAA,cAAc,EAAGR,qBAFW;AAG5BS,EAAAA,IAAI,EAAGR,WAHqB;AAI5BS,EAAAA,SAAS,EAAEP,gBAJiB;AAK5BQ,EAAAA,YAAY,EAAGP,mBALa;AAM5BQ,EAAAA,WAAW,EAAGV,kBANc;AAO5BW,EAAAA,iBAAiB,EAAGR;AAPQ,CAAD,CAA/B;AAUI,MAAMS,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC5BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD4B,GACmB,EADhD;AAGA,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC5BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD4B,GACkB,IAD/C;AAGJ,MAAMI,YAAY,GAAG;AACjBX,EAAAA,IAAI,EAAG;AAAEY,IAAAA,SAAS,EAAGP;AAAd,GADU;AAEjBJ,EAAAA,SAAS,EAAE;AAAEY,IAAAA,QAAQ,EAAEH;AAAZ;AAFM,CAArB;AAIA,MAAMI,UAAU,GAAG,CAAC1B,KAAD,CAAnB;AAEA,MAAM2B,KAAK,GAAG9B,WAAW,CAACY,OAAD,EAAWc,YAAX,EAA0BtB,mBAAmB,CAACF,eAAe,CAAC,GAAG2B,UAAJ,CAAhB,CAA7C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore , combineReducers , applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {productListReducer , productDetailsReducer} from './reducers/productReducers.js'\r\nimport {cartReducer} from './reducers/cartReducer.js'\r\nimport {userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducers.js'\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    cart : cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails : userDetailsReducer,\r\n    userUpdateProfile : userUpdateProfileReducer\r\n})\r\n\r\n    const cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ?JSON.parse(localStorage.getItem('cartItems')): []\r\n\r\n    const userInfroFromStorage = localStorage.getItem('userInfo')\r\n    ?JSON.parse(localStorage.getItem('userInfo')): null\r\n\r\nconst initialState = {\r\n    cart : { cartItems : cartItemsFromStorage},\r\n    userLogin: { userInfo: userInfroFromStorage}\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer , initialState , composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}